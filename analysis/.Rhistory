aes(
x=currcrossings/(currratio*currsize^2),
y=finalsize,
color=gentime) +
geom_jitter()+
geom_density2d(color='grey')+
scale_color_gradient(low="green", high="red") +
labs(
x="Filled-in fields and all fields ratio",
y=TeX("Size (\\sqrt{x*y})"),
color="Generation\ntime (s)",
)
ggplot(df_f) +
aes(
x=finalcrossings/(finalratio*finalsize^2),
y=finalsize,
color=gentime) +
geom_jitter()+
geom_density2d(color='grey')+
scale_color_gradient(low="green", high="red") +
labs(
x="Intersections to letters ratio",
y=TeX("Size (\\sqrt{x*y})"),
color="Generation\ntime (s)",
)
ggsave('graphs/crossings-size.svg')
sd(df_f)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
sd(a)
df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen) %>%
summary
var(df_f)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
for (variable in colnames(a)) {
print(variable)
print(sd(a[variable]))
}
sd(a$turn_amount)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(a$turn_amount)
?ggsave
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 100)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggsave('graphs/size.png', dpi=300)
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 10)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggsave('graphs/size.png', dpi=300)
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 2)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggsave('graphs/size.png', dpi=300)
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 2)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggsave('graphs/size.png', dpi=300)
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 1)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggsave('graphs/size.png', dpi=300)
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 2)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggsave('graphs/size.png', dpi=300)
cite()
cite(R)
cite(tidyverse)
cite(ggplot2)
citation(ggplot2)
citation("tidyverse")
citation("ggplot2")
citation("R")
citation()
citation(dplyt)
citation(dplyr)
citation("dplyr")
typeof(df_f)
citation("latex2exp")
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)/mean(a$turn_amount)
sd(a$gentime)/mean(a$gentime)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(a$turn_amount)
sd(a$gentime)
sd(a$gentime)/mean(a$gentime)
ggplot(df_f) +
aes(finalsize) +
geom_histogram(binwidth = 2)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
#ggsave('graphs/time.png', dpi=300)
ggplot(df_f) +
aes(finaltime) +
geom_histogram(binwidth = 2)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
ggplot(df_f) +
aes(gentime) +
geom_histogram()+
labs(
x="Puzzle size",
y="Puzzle amount",
)
#ggsave('graphs/time.png', dpi=300)
ggplot(df_f) +
aes(gentime) +
geom_histogram(binwidth = 0.5)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
#ggsave('graphs/time.png', dpi=300)
ggplot(df_f) +
aes(gentime) +
geom_histogram(binwidth = 0.25)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
#ggsave('graphs/time.png', dpi=300)
ggplot(df_f) +
aes(gentime) +
geom_histogram(binwidth = 0.25)+
labs(
x="Puzzle size",
y="Puzzle amount",
)
#ggsave('graphs/time.png', dpi=300)
no_outs <- df_p[df_p$puzzle != 0 | df_p$turn != 1, ]
ggplot(no_outs) +
aes(x=turn, y=turntime) +
geom_point(alpha=0.5)+
geom_smooth(method='lm') +
#  geom_rug(sides = "bl") +
labs(
x="Turn",
y="Turn time",
)
ggsave('graphs/turntime.png', dpi=300)
cor.test(no_outs$turn, no_outs$turntime)
no_outs <- df_p[df_p$puzzle != 0 | df_p$turn != 1, ]
ggplot(no_outs) +
aes(x=currsize, y=turntime) +
geom_point(alpha=0.5)+
geom_smooth(method='lm') +
#  geom_rug(sides = "bl") +
labs(
x="Turn",
y="Turn time",
)
%ggsave('graphs/turntime.png', dpi=300)
no_outs <- df_p[df_p$puzzle != 0 | df_p$turn != 1, ]
ggplot(no_outs) +
aes(x=currsize, y=turntime) +
geom_point(alpha=0.5)+
geom_smooth(method='lm') +
#  geom_rug(sides = "bl") +
labs(
x="Turn",
y="Turn time",
)
#ggsave('graphs/turntime.png', dpi=300)
cor.test(no_outs$currsize, no_outs$turntime)
no_outs <- df_p[df_p$puzzle != 0 | df_p$turn != 1, ]
ggplot(no_outs) +
aes(x=currtemperature, y=turntime) +
geom_point(alpha=0.5)+
geom_smooth(method='lm') +
#  geom_rug(sides = "bl") +
labs(
x="Turn",
y="Turn time",
)
#ggsave('graphs/turntime.png', dpi=300)
cor.test(no_outs$currtemperature, no_outs$turntime)
no_outs <- df_p[df_p$puzzle != 0 | df_p$turn != 1, ]
ggplot(no_outs) +
aes(x=turn, y=turntime) +
geom_point(alpha=0.5)+
geom_smooth(method='lm') +
#  geom_rug(sides = "bl") +
labs(
x="Turn",
y="Turn time",
)
ggsave('graphs/turntime.png', dpi=300)
cor.test(no_outs$turn, no_outs$turntime)
no_outs <- df_p[df_p$puzzle != 0 | df_p$turn != 1, ]
ggplot(no_outs) +
aes(x=turn, y=turntime) +
geom_point(alpha=0.5)+
geom_smooth(method='lm') +
#  geom_rug(sides = "bl") +
labs(
x="Turn",
y="Turn time",
)
ggsave('graphs/turntime.png', dpi=300)
cor.test(no_outs$turn, no_outs$turntime)
cor.test(no_outs$currtemperature, no_outs$turntime)
cor.test(no_outs$currsize, no_outs$turntime)
ggplot(df_p) +
aes(
x=turn,
y=currgoalval,
group=puzzle) +
geom_line(alpha=0.3) +
labs(
x="Turn",
y="Goal function value",
)
ggsave('graphs/goal.pnh', dpi=300)
ggplot(df_p) +
aes(
x=turn,
y=currgoalval,
group=puzzle) +
geom_line(alpha=0.3) +
labs(
x="Turn",
y="Goal function value",
)
ggsave('graphs/goal.png', dpi=300)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(a$turn_amount)
sd(a$gentime)
sd(a$gentime)/mean(a$gentime)
sd(a$finalratio)
sd(a$finalratio)/mean(a$finalratio)
ggplot(df_f) +
aes(
x=finalratio,
y=finalsize,
color=gentime) +
geom_jitter()+
geom_density2d(color='grey')+
scale_color_gradient(low="green", high="red") +
labs(
x="Filled-in fields and all fields ratio",
y=TeX("Size (\\sqrt{x*y})"),
color="Generation\ntime (s)",
)
ggsave('graphs/filledratio-size.png', dpi=300)
ggplot(df_f) +
aes(
x=finalcrossings/(finalratio*finalsize^2),
y=finalsize,
color=gentime) +
geom_jitter()+
geom_density2d(color='grey')+
scale_color_gradient(low="green", high="red") +
labs(
x="Intersections to letters ratio",
y=TeX("Size (\\sqrt{x*y})"),
color="Generation\ntime (s)",
)
ggsave('graphs/crossings-size.png', dpi=300)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
sd(df_f$currcrossings/(df_f$currratio*acurrsize^2))
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
sd(df_f$currcrossings/(df_f$currratio*df_f$acurrsize^2))
mean(df_f$currcrossings/(df_f$currratio*df_f$acurrsize^2))
sd(df_f$currcrossings/(df_f$currratio*df_f$acurrsize^2))/mean(df_f$currcrossings/(df_f$currratio*df_f$acurrsize^2))
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
b <- df_f$currcrossings/(df_f$currratio*df_f$acurrsize^2)
sd(b)
mean(b)
sd(b)/mean(b)
b
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
b <- df_f$finalcrossings/(df_f$finalratio*df_f$finalsize^2)
sd(b)
mean(b)
sd(b)/mean(b)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
print()
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
print("")
b <- df_f$finalcrossings/(df_f$finalratio*df_f$finalsize^2)
sd(b)
mean(b)
sd(b)/mean(b)
ggplot(df_p) +
aes(
x=turn,
y=currcrossings/(currratio*currsize^2)) +
geom_density_2d_filled() +
labs(
x="Turn",
y="Crossing and letter amount ratio",
level="Percent of crosswords"
)
ggsave('graphs/cross.png', dpi=300)
ggplot(df_p) +
aes(
x=turn,
y=currcrossings/(currratio*currsize^2)) +
geom_density_2d_filled() +
labs(
x="Turn",
y="Crossing to letter ratio",
level="Percent of crosswords"
)
ggsave('graphs/cross.png', dpi=300)
ggplot(df_p) +
aes(
x=turn,
y=currratio ,
group=puzzle) +
geom_line(alpha=0.3) +
labs(
x="Turn",
y="Filled-in fields and all fields ratio",
)
library(dplyr)
library(tibble)
library(ggplot2)
library(latex2exp)
df_f <- read.csv('../generated/finish/removing.csv', sep = ";")
df_p <- read.csv('../generated/process/removing.csv', sep = ";")
#df_f <- read.csv('../generated/finish/prezent.csv', sep = ";")
#df_p <- read.csv('../generated/process/prezent.csv', sep = ";")
ggplot(df_f) +
aes(finalcrossings) +
geom_density()
ggplot(df_f) +
aes(x=gentime, y=turn_amount) +
geom_smooth()
cor.test(df_f$gentime, df_f$turn_amount)
ggplot(df_f) +
aes(
x=finalratio,
y=finalsize,
color=gentime) +
geom_jitter()+
geom_density2d(color='grey')+
scale_color_gradient(low="green", high="red") +
labs(
x="Filled-in fields and all fields ratio",
y=TeX("Size (\\sqrt{x*y})"),
color="Generation\ntime (s)",
)
ggsave('graphs/filledratio-size.png', dpi=300)
ggplot(df_f) +
aes(
x=finalcrossings/(finalratio*finalsize^2),
y=finalsize,
color=gentime) +
geom_jitter()+
geom_density2d(color='grey')+
scale_color_gradient(low="green", high="red") +
labs(
x="Intersections to letters ratio",
y=TeX("Size (\\sqrt{x*y})"),
color="Generation\ntime (s)",
)
ggsave('graphs/crossings-size.png', dpi=300)
ggplot(df_p) +
aes(
x=turn,
y=currgoalval,
group=puzzle) +
geom_line(alpha=0.3) +
labs(
x="Turn",
y="Goal function value",
)
ggsave('graphs/goal.png', dpi=300)
a <- df_f %>%
select(turn_amount, finaltemperature, gentime, finalgoalval, finalsize, finalratio, finalcrossings, finallen)
summary(a)
sd(a$turn_amount)
sd(a$turn_amount)/mean(df_f$turn_amount)
sd(df_f$gentime)
sd(df_f$gentime)/mean(df_f$gentime)
sd(df_f$finalratio)
sd(df_f$finalratio)/mean(df_f$finalratio)
print("")
b <- df_f$finalcrossings/(df_f$finalratio*df_f$finalsize^2)
sd(b)
mean(b)
sd(b)/mean(b)
a <- read.csv('../generated/finish/removing.csv', sep = ";")
b <- read.csv('../generated/finish/prezent.csv', sep = ";")
t.test(a, b)
a <- read.csv('../generated/finish/removing.csv', sep = ";")
b <- read.csv('../generated/finish/prezent.csv', sep = ";")
t.test(a$gentime, b$gentime)
a <- read.csv('../generated/finish/removing.csv', sep = ";")
b <- read.csv('../generated/finish/prezent.csv', sep = ";")
t.test(a$gentime, b$gentime)
t.test(a$finalsize, b$finalsize)
a <- read.csv('../generated/finish/removing.csv', sep = ";")
b <- read.csv('../generated/finish/prezent.csv', sep = ";")
t.test(a$gentime, b$gentime)
t.test(a$finalsize, b$finalsize)
t.test(a$finalcrossings, b$finalcrossings)
a <- read.csv('../generated/finish/removing.csv', sep = ";")
b <- read.csv('../generated/finish/prezent.csv', sep = ";")
t.test(a$gentime, b$gentime)
t.test(a$finalsize, b$finalsize)
t.test(a$finalcrossings, b$finalcrossings)
t.test(a$finalgoalval, b$finalgoalval)
t.test(a$finalratio, b$finalratio)
ggplot(df_f) +
aes(finalcrossings) +
geom_density()
a <- read.csv('../generated/finish/removing.csv', sep = ";")
b <- read.csv('../generated/finish/prezent.csv', sep = ";")
t.test(a$gentime, b$gentime)
t.test(a$finalsize, b$finalsize)
t.test(a$finalcrossings, b$finalcrossings)
t.test(a$finalgoalval, b$finalgoalval)
t.test(a$finalratio, b$finalratio)
t.test(a$finalcrossings/(a$finalratio*a$finalsize^2), b$finalcrossings/(b$finalratio*b$finalsize^2))
a['source'] = 'remove'
b['source'] = ''
ggplot(df_f) +
aes(finalcrossings) +
geom_density()
